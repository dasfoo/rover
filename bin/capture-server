#!/bin/sh

# An HTTP server emulator which starts a capture
# once an incoming connection is established.

MYDIR="$(cd "$(dirname "$0")" || exit; pwd)"

[ "$1" = "-s" ] ||
	exec socat TCP-LISTEN:"${1?listen port required}",reuseaddr,fork \
		EXEC:"$MYDIR/capture-server -s"

ACTUAL_CAPTURE_PASSWORD="${CAPTURE_PASSWORD}"
CAPTURE_PASSWORD=""

read -r URL
if echo "$URL" | grep -Eq "[.]jpe?g "; then
	export CAPTURE_FPS=""
else
	# Set CAPTURE_FPS if not JPEG (image) is requested.
	export CAPTURE_FPS=20
fi

# Print to stderr because stdout is our HTTP response.
echo "Reading options for request: $URL" >&2

# Set known variables from specific headers.
eval "$(sed -nr 's/^X-Capture-Server-(WIDTH|HEIGHT|FPS|PASSWORD): ([a-z0-9]+)\r?$/export CAPTURE_\1=\2/p; /^\r?$/q')"

env | grep '^CAPTURE_' >&2

if [ "${ACTUAL_CAPTURE_PASSWORD}" != "${CAPTURE_PASSWORD}" ]; then
	# Password may be in the URL - e.g. opened from VLC
	if ! echo "$URL" | grep -q "${ACTUAL_CAPTURE_PASSWORD}"; then
		echo "Invalid password, access denied" >&2
		printf "HTTP/1.1 403 Forbidden\n\n403 Forbidden"
		exit 1
	fi
fi

printf "HTTP/1.1 200 OK\nServer: raspivid (socat, bash)\n"

if [ -n "${CAPTURE_FPS}" ]; then
	echo "Content-Type: video/h264"
else
	echo "Content-Type: image/jpeg"
fi

echo
exec "$MYDIR/capture"
