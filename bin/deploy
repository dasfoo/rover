#!/bin/sh

set -e

deploy_env() {
	# TODO: use arm-linux-gnueabihf-gcc (note the 'hf'), take CGO_CFLAGS from
	# $ gcc -mcpu=native -march=native -Q --help=target
	# Currently it's
	# -march=armv6zk -mcpu=arm1176jz-s -mfloat-abi=hard -mfpu=vfp
	# but dies randomly with SIGSEGV or SIGILL.
	cat <<'ENV'
CGO_ENABLED=1
CC=arm-linux-gnueabi-gcc
GOOS=linux
GOARCH=arm
GOARM=5
ENV
}

deploy_ssh() {
	[ "$(id -un)" = pi ] || ssh_prefix='sudo -u pi --'
	$ssh_prefix ssh pi "$@"
}

deploy_copy() {
	[ -n "$2" ] && transform="--transform 's|.*|$2|'"
	tar czpf - "${1?source required}" |
		deploy_ssh "tar xzf - -P $transform"
}

deploy_push() {
	(
		package_path="$(realpath -m "$0/../..")"
		cd "$package_path"
		# propagade the following environment variables to "go build"
		set -a
		eval "$(deploy_env)"
		go generate ./...
		go build
		cd ..
		package="$(basename "$package_path")"
		deploy_copy "$package"
		deploy_ssh "
			sudo sh -c '
				ln -sf \$PWD/$package/systemd/rover.service \
					/etc/systemd/system/multi-user.target.wants/
				systemctl daemon-reload
				systemctl restart $package
			'
		"
	)
}

COMMAND=${1?no command specified}
shift
"deploy_${COMMAND}" "$@"
